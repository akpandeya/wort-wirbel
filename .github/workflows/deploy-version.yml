name: Deploy Specific Version

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy (e.g., main-abc1234, v1.0.0, latest)'
        required: true
        type: string
      environment:
        description: 'Target environment'
        required: true
        type: choice
        default: 'production'
        options:
          - production
          - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  validate-image:
    name: Validate Image Exists
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify image exists
      run: |
        docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}
        echo "✅ Image ${{ inputs.image_tag }} exists and is ready for deployment"

  deploy-render:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [validate-image]
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install yq for YAML manipulation
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq

    - name: Update render.yaml with specific image tag
      run: |
        NEW_IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}"
        echo "Updating render.yaml to use image: $NEW_IMAGE"
        yq eval '.services[0].image.url = env(NEW_IMAGE)' -i render.yaml
        echo "Updated render.yaml:"
        cat render.yaml
      env:
        NEW_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}

    - name: Deploy to Render
      uses: JorgeLNJunior/render-deploy@v1.4.4
      with:
        service_id: ${{ secrets.RENDER_SERVICE_ID }}
        api_key: ${{ secrets.RENDER_API_KEY }}
        wait_deploy: true

    - name: Deployment Summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "✅ Successfully deployed image \`${{ inputs.image_tag }}\` to **${{ inputs.environment }}**" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed at**: $(date -u)" >> $GITHUB_STEP_SUMMARY
